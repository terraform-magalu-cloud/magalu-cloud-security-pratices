name: Publicar MkDocs no GitHub Pages

on:
  # Dispara o workflow em pushes para a branch 'main'
  push:
    branches:
      - main
  # Permite que você rode este workflow manualmente pela aba Actions
  workflow_dispatch:

# Define permissões de GITHUB_TOKEN para permitir o deploy no GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Permite apenas um deploy concorrente, cancelando execuções antigas
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Job de Build: constrói o site
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x # Use a versão do Python que preferir
          cache: 'pip' # Ativa o cache de dependências do pip

      - name: Instalar dependências
        run: |
          pip install -r requirements.txt
          # Certifique-se que 'requirements.txt' contenha 'mkdocs'
          # e quaisquer temas (ex: mkdocs-material) ou plugins que você usa.

      - name: Construir o site MkDocs
        run: mkdocs build
        # O resultado será salvo no diretório 'site/' por padrão

      - name: Upload do artefato
        uses: actions/upload-pages-artifact@v3
        with:
          # Faz o upload do diretório 'site/'
          path: ./site

  # Job de Deploy: publica o site no GitHub Pages
  deploy:
    name: Deploy
    needs: build # Este job só roda depois que o job 'build' for bem-sucedido
    runs-on: ubuntu-latest
    
    # Define o ambiente de deploy para 'github-pages'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy no GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        # Nenhuma configuração extra é necessária; 
        # a action automaticamente baixa o artefato do job 'build' e o publica.